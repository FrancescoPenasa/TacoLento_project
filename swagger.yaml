swagger: '2.0'
info:
  version: '1.0'
  title: "TacoLento"
  description: TacoLento is an API that allows it's users to create and manage exams and tasks.
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /users:
    get:
      tags:
      - "users"
      summary: Get all users
      description: ""
      produces:
      - "application/json"
      
      responses:
       200: 
         description: OK
       404:
         description: Users not found
      
    post:
      tags:
      - "users"
      summary: Create user
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: User created
        400: 
          description: Invalid input
        409: 
          description: An user with this email was already found.
          
  /users/findByClass:
    get:
      tags:
      - "users"
      summary: "Finds users by class"
      description: "Multiple class values can be provided with comma separated strings"
      operationId: "findUserssByClass"
      produces:
      - "application/json"
      parameters:
      - name: "class"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        400:
          description: "Invalid status value"

  /users/findByRole:
    get:
      tags:
      - "users"
      summary: "Finds Users by role"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findUsersByRole"
      produces:
      - "application/json"
      parameters:
      - name: "role"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        400:
          description: "Invalid status value"
      
  /users/{userId}:
    #x-summary: Update, search or delete a user
    get:
      description: Find user info
      parameters:
         - name: userId
           in: path
           description: exam ID
           required: true
           type: integer
      responses:
       302: 
         description: User found
       400: 
         description: Invalid input
       404:
         description: User not found
    put:
      description: Update user info
      parameters:
         - name: userId
           in: path
           description: exam ID
           required: true
           type: integer
      responses:
       202: 
         description: User updated
       400: 
         description: Invalid input
       404: 
         description: User not found
    delete:
      description: delete user
      parameters:
         - name: userId
           in: path
           description: exam ID
           required: true
           type: integer
      responses:
       202: 
         description: User deleted
       404: 
         description: User not found
  
  /tasks:
    #x-summary: Tasks Collection
    get:
      description: List All Tasks
#      parameters:
#          in: query
#          name: MC
#          schema:
#            type: string
#            enum: [MC,CC, OpenAnswer]
#          required: false
      responses:
        200:
          description: Successful response
        400: 
          description: Invalid input
          
    post:
      description: New Task
      responses:
        201:
          description: Task created 
        400:
          description: Invalid input
         
  #/tasks/findBySubject        
  #TODO 
          
  /tasks/{taskId}:
    #x-summary: Update, search or delete a task
    get:
      description: Find task
      parameters:
        - name: taskId
          in: path
          description: exam ID
          required: true
          type: integer
      responses:
        201: 
          description: Task found
        400: 
          description: Invalid input
        404:
          description: Task not found
    post:
      description: Update task
      parameters:
        - name: taskId
          in: path
          description: exam ID
          required: true
          type: integer
      responses:
        201: 
          description: Task updated
        400: 
          description: Invalid input
        404:
          description: Task not found
    delete:
      description: Delete task
      parameters:
        - name: taskId
          in: path
          description: exam ID
          required: true
          type: integer
      responses:
        201: 
          description: Task deleted
        404:
          description: Task not found
    
          
  /exams:
    #x-summary: Exams Collection
    get:
      summary: List All Exams
      responses:
        200:
          description: Successful response
        400: 
          description: Invalid input
    
    post:
      description: New exams
      summary: Create a New Exam
      responses:
        201:
          description: Exams created
        400:
          description: Invalid input

  /exams/{examId}:
    #x-summary: Update, search or delete exam 
    get:
      description: Find exam
      parameters:
        - name: examId
          in: path
          description: exam ID
          required: true
          type: integer
      responses:
        201: 
          description: Exam find
        400: 
          description: Invalid input
    put:
      description: Update Exam
      parameters:
        - name: examId
          in: path
          description: exam ID
          required: true
          type: integer
      responses:
         201: 
           description: Exam updated
         400: 
           description: Invalid input
    delete:
      description: Delete Exam
      parameters:
        - name: examId
          in: path
          description: exam ID
          required: true
          type: integer
      responses:
        201: 
          description: Exam deleted
        400: 
          description: Invalid input
          
  /submissions/:
    #x-summary: sub 
    get:
      tags:
      - "submissions"
      summary: Get all submissions
      description: ""
      produces:
      - "application/json"
      
      responses:
       200: 
         description: OK
       404:
         description: Submissions not found
      
    post:
      tags:
      - "submission"
      summary: Create review
      description: ""
      operationId: "addSubmission"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created submission object"
        required: true
        schema:
          $ref: "#/definitions/Submission"
      responses:
        201:
          description: Submission created
        400: 
          description: Invalid input

    
  #/submissions/findByExam:
  #TODO
    
  /submissions/{subId}:
  #  x-summary: Update, search or delete exam 
    get:
      description: Find Submission
      parameters:
        - name: subId
          in: path
          description: submission ID
          required: true
          type: integer
      responses:
        201: 
          description: Submission find
        400: 
          description: Invalid input
          
    #questo potrebbe essere importante      
    put:
      description: Update Submission
      parameters:
        - name: subId
          in: path
          description: submission ID
          required: true
          type: integer
      responses:
         201: 
           description: Submission updated
         400: 
           description: Invalid input
           
    delete:
      description: Delete Exam
      parameters:
        - name: subId
          in: path
          description: submission ID
          required: true
          type: integer
      responses:
        200: 
          description: Submission deleted
        400: 
          description: Invalid input

  /reviews/:
  #  x-summary: Update, search or delete exam 
    get:
      tags:
      - "review"
      summary: Get all reviews
      description: ""
      produces:
      - "application/json"
      
      responses:
       200: 
         description: OK
       404:
         description: Reviews not found
      
    post:
      tags:
      - "review"
      summary: Create review
      description: ""
      operationId: "addReview"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created review object"
        required: true
        schema:
          $ref: "#/definitions/Review"
      responses:
        201:
          description: Review created
        400: 
          description: Invalid input
        
  #/reviews/findByExam
  #TODO
  
  #/reviews/findBySumbission
  #TODO 
  
  /reviews/{reviewId}:
  #  x-summary: Update, search or delete exam 
    get:
      description: Find review
      parameters:
        - name: reviewId
          in: path
          description: revied id
          required: true
          type: integer
      responses:
        200: 
          description: Review find
        400: 
          description: Invalid input
          
#### questo potremmo cancellarlo          
    put:
      description: Update review
      parameters:
        - name: reviewId
          in: path
          required: true
          type: integer
      responses:
         201: 
           description: Exam updated
         400: 
           description: Invalid input
           
# e anche questo           
    delete:
      description: Delete review
      parameters:
        - name: reviewId
          in: path
          required: true
          type: integer
      responses:
        201: 
          description: Exam deleted
        400: 
          description: Invalid input

#### fino a qui

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"
        description: "AT, Teacher or Stundet"
      class:
        type: "string"
        description: "name of the class attended or teached"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
      
# TO DO SUBMISSION BETTER      
  Submission:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"
        description: "AT, Teacher or Stundet"
      class:
        type: "string"
        description: "name of the class attended or teached"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
      
# TO DO REVIEW BETTER      
  Review:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      role:
        type: "string"
        description: "AT, Teacher or Stundet"
      class:
        type: "string"
        description: "name of the class attended or teached"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"